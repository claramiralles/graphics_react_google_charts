{"ast":null,"code":"var _jsxFileName = \"/Users/clara/Documents/adalab/react/best_exercises_react/hackathon - interacso/graphics_google_charts/src/App.js\";\nimport React from 'react';\nimport Chart from 'react-google-charts';\nimport './App.css';\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      maxWidth: 900\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Chart, {\n    width: 300,\n    height: 300,\n    chartType: \"ColumnChart\",\n    loader: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"Loading Chart\"),\n    data: [['City', '2010 Population', '2000 Population'], ['New York City, NY', 8175000, 8008000], ['Los Angeles, CA', 3792000, 3694000], ['Chicago, IL', 2695000, 2896000], ['Houston, TX', 2099000, 1953000], ['Philadelphia, PA', 1526000, 1517000]],\n    options: {\n      title: 'Population of Largest U.S. Cities',\n      chartArea: {\n        width: '30%'\n      },\n      hAxis: {\n        title: 'Total Population',\n        minValue: 0\n      },\n      vAxis: {\n        title: 'City'\n      }\n    },\n    legendToggle: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }), React.createElement(Chart, {\n    width: 300,\n    height: '300px',\n    chartType: \"AreaChart\",\n    loader: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Loading Chart\"),\n    data: [['Year', 'Sales', 'Expenses'], ['2013', 1000, 400], ['2014', 1170, 460], ['2015', 660, 1120], ['2016', 1030, 540]],\n    options: {\n      title: 'Company Performance',\n      hAxis: {\n        title: 'Year',\n        titleTextStyle: {\n          color: '#333'\n        }\n      },\n      vAxis: {\n        minValue: 0\n      },\n      // For the legend to fit, we make the chart area smaller\n      chartArea: {\n        width: '50%',\n        height: '70%'\n      } // lineWidth: 25\n\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Chart, {\n    width: 300,\n    height: 300,\n    chartType: \"Scatter\",\n    loader: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Loading Chart\"),\n    data: [['Hours Studied', 'Final'], [0, 67], [1, 88], [2, 77], [3, 93], [4, 85], [5, 91], [6, 71], [7, 78], [8, 93], [9, 80], [10, 82], [0, 75], [5, 80], [3, 90], [1, 72], [5, 75], [6, 68], [7, 98], [3, 82], [9, 94], [2, 79], [2, 95], [2, 86], [3, 67], [4, 60], [2, 80], [6, 92], [2, 81], [8, 79], [9, 83], [3, 75], [1, 80], [3, 71]],\n    options: {\n      // Material design options\n      chart: {\n        title: \"Students' Final Grades\",\n        subtitle: 'based on hours studied'\n      },\n      hAxis: {\n        title: 'Hours Studied'\n      },\n      vAxis: {\n        title: 'Grade'\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Chart, {\n    width: 300,\n    height: '300px',\n    chartType: \"BubbleChart\",\n    loader: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Loading Chart\"),\n    data: [['ID', 'Life Expectancy', 'Fertility Rate', 'Region', 'Population'], ['CAN', 80.66, 1.67, 'North America', 33739900], ['DEU', 79.84, 1.36, 'Europe', 81902307], ['DNK', 78.6, 1.84, 'Europe', 5523095], ['EGY', 72.73, 2.78, 'Middle East', 79716203], ['GBR', 80.05, 2, 'Europe', 61801570], ['IRN', 72.49, 1.7, 'Middle East', 73137148], ['IRQ', 68.09, 4.77, 'Middle East', 31090763], ['ISR', 81.55, 2.96, 'Middle East', 7485600], ['RUS', 68.6, 1.54, 'Europe', 141850000], ['USA', 78.09, 2.05, 'North America', 307007000]],\n    options: {\n      title: 'Correlation between life expectancy, fertility rate ' + 'and population of some world countries (2010)',\n      hAxis: {\n        title: 'Life Expectancy'\n      },\n      vAxis: {\n        title: 'Fertility Rate'\n      },\n      bubble: {\n        textStyle: {\n          fontSize: 11\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(Chart, {\n    width: 300,\n    height: 300,\n    chartType: \"LineChart\",\n    loader: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Loading Chart\"),\n    data: [[{\n      type: 'number',\n      label: 'x'\n    }, {\n      type: 'number',\n      label: 'values'\n    }, {\n      id: 'i0',\n      type: 'number',\n      role: 'interval'\n    }, {\n      id: 'i1',\n      type: 'number',\n      role: 'interval'\n    }, {\n      id: 'i2',\n      type: 'number',\n      role: 'interval'\n    }, {\n      id: 'i2',\n      type: 'number',\n      role: 'interval'\n    }, {\n      id: 'i2',\n      type: 'number',\n      role: 'interval'\n    }, {\n      id: 'i2',\n      type: 'number',\n      role: 'interval'\n    }], [1, 100, 90, 110, 85, 96, 104, 120], [2, 120, 95, 130, 90, 113, 124, 140], [3, 130, 105, 140, 100, 117, 133, 139], [4, 90, 85, 95, 85, 88, 92, 95], [5, 70, 74, 63, 67, 69, 70, 72], [6, 30, 39, 22, 21, 28, 34, 40], [7, 80, 77, 83, 70, 77, 85, 90], [8, 100, 90, 110, 85, 95, 102, 110]],\n    options: {\n      intervals: {\n        style: 'sticks'\n      },\n      legend: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), React.createElement(Chart, {\n    width: 300,\n    height: 300,\n    chartType: \"Line\",\n    loader: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Loading Chart\"),\n    data: [['Day', 'Guardians of the Galaxy', 'The Avengers', 'Transformers: Age of Extinction'], [1, 37.8, 80.8, 41.8], [2, 30.9, 69.5, 32.4], [3, 25.4, 57, 25.7], [4, 11.7, 18.8, 10.5], [5, 11.9, 17.6, 10.4], [6, 8.8, 13.6, 7.7], [7, 7.6, 12.3, 9.6], [8, 12.3, 29.2, 10.6], [9, 16.9, 42.9, 14.8], [10, 12.8, 30.9, 11.6], [11, 5.3, 7.9, 4.7], [12, 6.6, 8.4, 5.2], [13, 4.8, 6.3, 3.6], [14, 4.2, 6.2, 3.4]],\n    options: {\n      chart: {\n        title: 'Box Office Earnings in First Two Weeks of Opening',\n        subtitle: 'in millions of dollars (USD)'\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/clara/Documents/adalab/react/best_exercises_react/hackathon - interacso/graphics_google_charts/src/App.js"],"names":["React","Chart","App","display","maxWidth","title","chartArea","width","hAxis","minValue","vAxis","titleTextStyle","color","height","chart","subtitle","bubble","textStyle","fontSize","type","label","id","role","intervals","style","legend"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Chart from 'react-google-charts';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div style={{ display: 'flex', maxWidth: 900 }}>\n  <Chart\n    width={300}\n    height={300}\n    chartType=\"ColumnChart\"\n    loader={<div>Loading Chart</div>}\n    data={[\n      ['City', '2010 Population', '2000 Population'],\n      ['New York City, NY', 8175000, 8008000],\n      ['Los Angeles, CA', 3792000, 3694000],\n      ['Chicago, IL', 2695000, 2896000],\n      ['Houston, TX', 2099000, 1953000],\n      ['Philadelphia, PA', 1526000, 1517000],\n    ]}\n    options={{\n      title: 'Population of Largest U.S. Cities',\n      chartArea: { width: '30%' },\n      hAxis: {\n        title: 'Total Population',\n        minValue: 0,\n      },\n      vAxis: {\n        title: 'City',\n      },\n    }}\n    legendToggle\n  />\n  <Chart\n    width={300}\n    height={'300px'}\n    chartType=\"AreaChart\"\n    loader={<div>Loading Chart</div>}\n    data={[\n      ['Year', 'Sales', 'Expenses'],\n      ['2013', 1000, 400],\n      ['2014', 1170, 460],\n      ['2015', 660, 1120],\n      ['2016', 1030, 540],\n    ]}\n    options={{\n      title: 'Company Performance',\n      hAxis: { title: 'Year', titleTextStyle: { color: '#333' } },\n      vAxis: { minValue: 0 },\n      // For the legend to fit, we make the chart area smaller\n      chartArea: { width: '50%', height: '70%' },\n      // lineWidth: 25\n    }}\n  />\n  <Chart\n    width={300}\n    height={300}\n    chartType=\"Scatter\"\n    loader={<div>Loading Chart</div>}\n    data={[\n      ['Hours Studied', 'Final'],\n      [0, 67],\n      [1, 88],\n      [2, 77],\n      [3, 93],\n      [4, 85],\n      [5, 91],\n      [6, 71],\n      [7, 78],\n      [8, 93],\n      [9, 80],\n      [10, 82],\n      [0, 75],\n      [5, 80],\n      [3, 90],\n      [1, 72],\n      [5, 75],\n      [6, 68],\n      [7, 98],\n      [3, 82],\n      [9, 94],\n      [2, 79],\n      [2, 95],\n      [2, 86],\n      [3, 67],\n      [4, 60],\n      [2, 80],\n      [6, 92],\n      [2, 81],\n      [8, 79],\n      [9, 83],\n      [3, 75],\n      [1, 80],\n      [3, 71],\n    ]}\n    options={{\n      // Material design options\n      chart: {\n        title: \"Students' Final Grades\",\n        subtitle: 'based on hours studied',\n      },\n      hAxis: { title: 'Hours Studied' },\n      vAxis: { title: 'Grade' },\n    }}\n  />\n</div>\n<div style={{ display: 'flex' }}>\n  <Chart\n    width={300}\n    height={'300px'}\n    chartType=\"BubbleChart\"\n    loader={<div>Loading Chart</div>}\n    data={[\n      ['ID', 'Life Expectancy', 'Fertility Rate', 'Region', 'Population'],\n      ['CAN', 80.66, 1.67, 'North America', 33739900],\n      ['DEU', 79.84, 1.36, 'Europe', 81902307],\n      ['DNK', 78.6, 1.84, 'Europe', 5523095],\n      ['EGY', 72.73, 2.78, 'Middle East', 79716203],\n      ['GBR', 80.05, 2, 'Europe', 61801570],\n      ['IRN', 72.49, 1.7, 'Middle East', 73137148],\n      ['IRQ', 68.09, 4.77, 'Middle East', 31090763],\n      ['ISR', 81.55, 2.96, 'Middle East', 7485600],\n      ['RUS', 68.6, 1.54, 'Europe', 141850000],\n      ['USA', 78.09, 2.05, 'North America', 307007000],\n    ]}\n    options={{\n      title:\n        'Correlation between life expectancy, fertility rate ' +\n        'and population of some world countries (2010)',\n      hAxis: { title: 'Life Expectancy' },\n      vAxis: { title: 'Fertility Rate' },\n      bubble: { textStyle: { fontSize: 11 } },\n    }}\n  />\n  <Chart\n    width={300}\n    height={300}\n    chartType=\"LineChart\"\n    loader={<div>Loading Chart</div>}\n    data={[\n      [\n        { type: 'number', label: 'x' },\n        { type: 'number', label: 'values' },\n        { id: 'i0', type: 'number', role: 'interval' },\n        { id: 'i1', type: 'number', role: 'interval' },\n        { id: 'i2', type: 'number', role: 'interval' },\n        { id: 'i2', type: 'number', role: 'interval' },\n        { id: 'i2', type: 'number', role: 'interval' },\n        { id: 'i2', type: 'number', role: 'interval' },\n      ],\n      [1, 100, 90, 110, 85, 96, 104, 120],\n      [2, 120, 95, 130, 90, 113, 124, 140],\n      [3, 130, 105, 140, 100, 117, 133, 139],\n      [4, 90, 85, 95, 85, 88, 92, 95],\n      [5, 70, 74, 63, 67, 69, 70, 72],\n      [6, 30, 39, 22, 21, 28, 34, 40],\n      [7, 80, 77, 83, 70, 77, 85, 90],\n      [8, 100, 90, 110, 85, 95, 102, 110],\n    ]}\n    options={{\n      intervals: { style: 'sticks' },\n      legend: 'none',\n    }}\n  />\n  <Chart\n    width={300}\n    height={300}\n    chartType=\"Line\"\n    loader={<div>Loading Chart</div>}\n    data={[\n      [\n        'Day',\n        'Guardians of the Galaxy',\n        'The Avengers',\n        'Transformers: Age of Extinction',\n      ],\n      [1, 37.8, 80.8, 41.8],\n      [2, 30.9, 69.5, 32.4],\n      [3, 25.4, 57, 25.7],\n      [4, 11.7, 18.8, 10.5],\n      [5, 11.9, 17.6, 10.4],\n      [6, 8.8, 13.6, 7.7],\n      [7, 7.6, 12.3, 9.6],\n      [8, 12.3, 29.2, 10.6],\n      [9, 16.9, 42.9, 14.8],\n      [10, 12.8, 30.9, 11.6],\n      [11, 5.3, 7.9, 4.7],\n      [12, 6.6, 8.4, 5.2],\n      [13, 4.8, 6.3, 3.6],\n      [14, 4.2, 6.2, 3.4],\n    ]}\n    options={{\n      chart: {\n        title: 'Box Office Earnings in First Two Weeks of Opening',\n        subtitle: 'in millions of dollars (USD)',\n      },\n    }}\n  />\n</div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}